@using AjaxDataLoad.Models;
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/scripts/jquery-3.6.3.min.js"></script>
    <link href="~/Content/DataTables/css/dataTables.bootstrap4.css" rel="stylesheet" />
   


    <script src="~/Scripts/DataTables/dataTables.bootstrap4.js"></script>
 
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "ajax": {
                    "url": "/Home/GetData",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "ProductID" },
                    { "data": "ProductName" },
                    { "data": "SupplierID" },
                    { "data": "CategoryID" },
                    { "data": "UnitsInStock" },
                    { "data": "UnitsOnOrder" }
                ]
            });
        });
    </script>
    <title>Index</title>
</head>
<body>
    <div class="container py-4">
        <h4 class="text-center text-uppercase">PRODUCT DETAILS</h4>
        <div id="dataTable_wrapper"></div>
        <table id="dataTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ProductID</th>
                    <th>ProductName</th>
                    <th>SupplierID</th>
                    <th>CategoryID</th>
                    <th>UnitsInStock</th>
                    <th>UnitsOnOrder</th>
                </tr>
            </thead>
        </table>
    </div>
</body>
</html>  
//bootstrap
//jquery
//datatypes